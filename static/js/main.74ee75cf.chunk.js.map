{"version":3,"sources":["components/Header.js","components/FilterButtons.js","components/Card.js","components/Cards.js","components/Modal.js","serviceWorker.js","index.js","App.js"],"names":["withStyles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","actions","react_default","a","createElement","className","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","onChange","e","changeSearchStr","target","value","button","margin","Button_default","onClick","changeFilter","card","minWidth","justify-content","bullet","transform","fontSize","pos","marginBottom","over","state","todo","index","is_over","Date","getTime","deadline","filter","is_finished","name","match","search_str","desc","Card_default","CardContent_default","concat","gutterBottom","DateFormat","component","CardActions_default","Checkbox_default","changeFinished","checked","removeTodo","Delete_default","Cards","cardDoms","todos","map","components_Card","key","modalStyle","top","left","SimpleModalWrapped","paper","background","boxShadow","shadows","padding","outline","fab","bottom","right","container","flexWrap","textField","_React$useState","React","useState","_React$useState2","slicedToArray","open","openDispatcher","_React$useState3","_React$useState4","nameDispatcher","_React$useState5","_React$useState6","descDispatcher","_React$useState7","_React$useState8","deadlineDispatcher","changeValues","dispatcher","Fab_default","Add_default","Modal_default","aria-labelledby","aria-describedby","onClose","style","TextField_default","id","label","type","InputLabelProps","shrink","addTodo","Boolean","window","location","hostname","ReactDOM","render","initState","localStorage","getItem","JSON","parse","todosDispatcher","filterDispatcher","searchStrDispatcher","useEffect","setItem","stringify","Header","str","FilterButtons","target_index","components_Modal","toConsumableArray","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2WA+GeA,2BAnGA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,MAAO,QAETC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAa,GACbC,YAAa,IAEfC,MAAMC,OAAAC,EAAA,EAAAD,CAAA,CACJE,QAAS,QACRX,EAAMY,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAOL,OAAAC,EAAA,EAAAD,CAAA,CACLM,SAAU,WACVC,aAAchB,EAAMiB,MAAMD,aAC1BE,gBAAiBC,eAAKnB,EAAMoB,QAAQC,OAAOC,MAAO,KAClDC,UAAW,CACTL,gBAAiBC,eAAKnB,EAAMoB,QAAQC,OAAOC,MAAO,MAEpDhB,WAAY,EACZJ,MAAO,QACNF,EAAMY,YAAYC,GAAG,MAAQ,CAC5BP,WAAYN,EAAMwB,QAAQC,KAC1BvB,MAAO,SAGXwB,WAAY,CACVxB,MAA4B,EAArBF,EAAMwB,QAAQC,KACrBE,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACfjB,QAAS,OACTkB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,UACP9B,MAAO,QAET+B,WAAWxB,OAAAC,EAAA,EAAAD,CAAA,CACTyB,WAAYlC,EAAMwB,QAAQC,KAC1BU,aAAcnC,EAAMwB,QAAQC,KAC5BW,cAAepC,EAAMwB,QAAQC,KAC7BY,YAAkC,GAArBrC,EAAMwB,QAAQC,KAC3Ba,WAAYtC,EAAMuC,YAAYC,OAAO,SACrCtC,MAAO,QACNF,EAAMY,YAAYC,GAAG,MAAQ,CAC5BX,MAAO,IACPuC,UAAW,CACTvC,MAAO,SA6CAH,CAvCf,SAAsB2C,GAAO,IACnBC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QAIjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ1C,MACtB4C,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQ/B,SAAS,UACf8B,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACED,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYE,UAAWL,EAAQtC,WAAY2B,MAAM,UAAUoB,aAAW,eACpEP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,OAEFD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAYE,UAAWL,EAAQnC,MAAO+C,QAAQ,KAAKvB,MAAM,UAAUwB,QAAM,GAAzE,uBAGAX,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQxC,OACxB0C,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ7B,QACtB+B,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQjB,YACtBmB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,OAEFD,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEa,YAAY,eACZhB,QAAS,CACP1C,KAAM0C,EAAQZ,UACd6B,MAAOjB,EAAQV,YAEjB4B,SAvBW,SAACC,GAAD,OAAOlB,EAAQmB,gBAAgBD,EAAEE,OAAOC,iCC1BlDlE,2BA5CA,SAAAC,GAAK,MAAK,CACvBkE,OAAQ,CACNC,OAAQnE,EAAMwB,QAAQC,MAExBmC,MAAO,CACLjD,QAAS,UAuCEZ,CAnCf,SAA0B2C,GAAO,IACvBC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACES,QAAQ,YACRP,UAAWL,EAAQuB,OACnBG,QAAS,kBAAMzB,EAAQ0B,aAAa,QAHtC,OAOAzB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACES,QAAQ,YACRvB,MAAM,UACNgB,UAAWL,EAAQuB,OACnBG,QAAS,kBAAMzB,EAAQ0B,cAAa,KAJtC,eAQAzB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACES,QAAQ,YACRvB,MAAM,YACNgB,UAAWL,EAAQuB,OACnBG,QAAS,kBAAMzB,EAAQ0B,cAAa,KAJtC,qHC+CSvE,2BApEA,CACbwE,KAAM,CACJC,SAAU,IACV7D,QAAS,OACT8D,kBAAmB,iBAErBC,OAAQ,CACN/D,QAAS,eACTwD,OAAQ,QACRQ,UAAW,cAEbnE,MAAO,CACLoE,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhBC,KAAM,CACJ/C,MAAO,YAkDIjC,CA9Cf,SAAoB2C,GAAO,IACjBC,EAAyCD,EAAzCC,QAASC,EAAgCF,EAAhCE,QAASoC,EAAuBtC,EAAvBsC,MAAOC,EAAgBvC,EAAhBuC,KAAMC,EAAUxC,EAAVwC,MACjCC,GAAW,IAAIC,MAAQC,UAAYJ,EAAKK,SAAW,EAKzD,OAAoB,OAAjBN,EAAMO,QAAmBP,EAAMO,SAAWN,EAAKO,YAAoB,KAC7B,OAAtCP,EAAKQ,KAAKC,MAAMV,EAAMW,aAA8D,OAAtCV,EAAKW,KAAKF,MAAMV,EAAMW,YAA6B,KAElG9C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAME,UAAWL,EAAQ4B,MACvB1B,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,KACED,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAYE,UAAS,GAAA+C,OAAKpD,EAAQnC,MAAb,KAAAuF,OAAsBZ,EAAUxC,EAAQoC,KAAO,IAAM/C,MAAM,gBAAgBgE,cAAY,GACxGC,IAAWhB,EAAKK,SAAU,aAE9BzC,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAYS,QAAQ,KAAK2C,UAAU,MAC/BjB,EAAKQ,MAET5C,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAYE,UAAWL,EAAQkC,IAAK7C,MAAM,iBACtCiD,EAAKO,YAAc,WAAa,eAEpC3C,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAYoD,UAAU,KAClBjB,EAAKW,OAGX/C,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,KACED,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CACEd,MAAM,UACNqC,QAvBY,SAACP,GAAD,OAAOlB,EAAQyD,eAAevC,EAAEE,OAAOsC,QAASpB,IAwB5DoB,QAASrB,EAAKO,cAEhB3C,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEM,aAAW,SACXiB,QA7BW,kBAAMzB,EAAQ2D,WAAWrB,KA+BpCrC,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,WCjEK2D,EAAA,SAAC/D,GAAU,IAChBE,EAAmBF,EAAnBE,QAASoC,EAAUtC,EAAVsC,MAEX0B,EAAW1B,EAAM2B,MAAMC,IAC3B,SAAC3B,EAAMC,GAAP,OACGrC,EAAAC,EAAAC,cAAC8D,EAAD,CAAMC,IAAK5B,EAAOtC,QAASA,EAASoC,MAAOA,EAAOC,KAAMA,EAAMC,MAAOA,MAE1E,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZ0D,0ECJDK,EAAa,CACjBC,IAAK,MACLC,KAAM,MACNtC,UAAW,yBAgHb,IAEeuC,EAFYnH,qBA7GZ,SAAAC,GAAK,MAAK,CACvBmH,MAAO,CACLpG,SAAU,WACVb,MAA4B,GAArBF,EAAMwB,QAAQC,KACrBP,gBAAiBlB,EAAMoB,QAAQgG,WAAWD,MAC1CE,UAAWrH,EAAMsH,QAAQ,GACzBC,QAA8B,EAArBvH,EAAMwB,QAAQC,KACvB+F,QAAS,QAEXC,IAAK,CACHtD,OAAQnE,EAAMwB,QAAQC,KACtBV,SAAU,QACV2G,OAAQ,IACRC,MAAO,KAETC,UAAW,CACTjH,QAAS,OACTkH,SAAU,QAEZC,UAAW,CACTxH,WAAYN,EAAMwB,QAAQC,KAC1BlB,YAAaP,EAAMwB,QAAQC,KAC3BvB,MAAO,KAETgE,OAAQ,CACNvD,QAAS,QACTwD,OAAQnE,EAAMwB,QAAQC,QAmFC1B,CA/E3B,SAAqB2C,GAAO,IAClBC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QADSmF,EAGKC,IAAMC,UAAS,GAHpBC,EAAAzH,OAAA0H,EAAA,EAAA1H,CAAAsH,EAAA,GAGnBK,EAHmBF,EAAA,GAGbG,EAHaH,EAAA,GAAAI,EAIKN,IAAMC,SAAS,IAJpBM,EAAA9H,OAAA0H,EAAA,EAAA1H,CAAA6H,EAAA,GAInB7C,EAJmB8C,EAAA,GAIbC,EAJaD,EAAA,GAAAE,EAKKT,IAAMC,SAAS,IALpBS,EAAAjI,OAAA0H,EAAA,EAAA1H,CAAAgI,EAAA,GAKnB7C,EALmB8C,EAAA,GAKbC,EALaD,EAAA,GAAAE,EAMaZ,IAAMC,UAAU,IAAI7C,MAAQC,WANzCwD,EAAApI,OAAA0H,EAAA,EAAA1H,CAAAmI,EAAA,GAMnBtD,EANmBuD,EAAA,GAMTC,EANSD,EAAA,GAQpBE,EAAe,SAACC,EAAY/E,GAAb,OAAuB+E,EAAW/E,IAYvD,OACEpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkG,EAAAnG,EAAD,CAAKuB,QAAS,kBAAMgE,GAAe,IAAOrG,MAAM,UAAUoB,aAAW,MAAMJ,UAAWL,EAAQ8E,KAC5F5E,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,OAEFD,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CACEsG,kBAAgB,qBAChBC,mBAAiB,2BACjBjB,KAAMA,EACNkB,QAAS,kBAAMjB,GAAe,KAE9BxF,EAAAC,EAAAC,cAAA,OAAKwG,MAAOxC,EAAY/D,UAAWL,EAAQwE,OACvCtE,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,CACE2G,GAAG,OACHC,MAAM,OACNC,KAAK,OACL3G,UAAWL,EAAQmF,UACnB8B,gBAAiB,CACfC,QAAQ,GAEVhG,SAAU,SAACC,GAAD,OAAOiF,EAAaP,EAAgB1E,EAAEE,OAAOC,UAEzDpB,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,CACE2G,GAAG,OACHC,MAAM,cACNC,KAAK,OACL3G,UAAWL,EAAQmF,UACnB8B,gBAAiB,CACfC,QAAQ,GAEVhG,SAAU,SAACC,GAAD,OAAOiF,EAAaJ,EAAgB7E,EAAEE,OAAOC,UAEzDpB,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,CACE2G,GAAG,WACHC,MAAM,WACNC,KAAK,OACL3G,UAAWL,EAAQmF,UACnB8B,gBAAiB,CACfC,QAAQ,GAEVhG,SAAU,SAACC,GAAD,OAAOiF,EAAaD,EAAoBhF,EAAEE,OAAOC,UAE7DpB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACEE,UAAWL,EAAQuB,OACnBG,QAAU,kBArDpBzB,EAAQkH,QAAQ,CACdrE,OACAG,OACAN,SAAW,IAAIF,KAAKE,GAAWD,UAC/BG,aAAa,SAEf6C,GAAe,KA6CP,eC/FQ0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxE,MACvB,2DCZNyE,IAASC,OAAOvH,EAAAC,EAAAC,cCCD,WACb,IAAMsH,EAAYC,aAAaC,QAAQ,qBADpBxC,EAIcC,IAAMC,SAAuB,OAAdoC,EAAqB,GAAKG,KAAKC,MAAMJ,IAJlEnC,EAAAzH,OAAA0H,EAAA,EAAA1H,CAAAsH,EAAA,GAIZpB,EAJYuB,EAAA,GAILwC,EAJKxC,EAAA,GAAAI,EAKgBN,IAAMC,SAAS,MAL/BM,EAAA9H,OAAA0H,EAAA,EAAA1H,CAAA6H,EAAA,GAKZ/C,EALYgD,EAAA,GAKJoC,EALIpC,EAAA,GAAAE,EAMuBT,IAAMC,SAAS,IANtCS,EAAAjI,OAAA0H,EAAA,EAAA1H,CAAAgI,EAAA,GAMZ9C,EANY+C,EAAA,GAMAkC,EANAlC,EAAA,GA6BnB,OAJAV,IAAM6C,UAAU,WACdP,aAAaQ,QAAQ,oBAAqBN,KAAKO,UAAUpE,KACxD,CAACA,IAGF9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiI,EAAD,CAAQpI,QAAU,CAACmB,gBARC,SAACkH,GAAD,OAASL,EAAoBK,OASjDpI,EAAAC,EAAAC,cAACmI,EAAD,CAAetI,QAAU,CAAC0B,aAVT,SAACL,GAAD,OAAW0G,EAAiB1G,OAW7CpB,EAAAC,EAAAC,cAAC0D,EAAD,CAAOzB,MAAQ,CAAC2B,QAAOpB,SAAQI,cAAc/C,QAAU,CAAC2D,WAvBzC,SAAC4E,GAAD,OAAkBT,EAAgB/D,EAClDpB,OAAO,SAACN,EAAMC,GAAP,OAAiBiG,IAAiBjG,MAsB4BmB,eArBjD,SAACb,EAAa2F,GAAd,OAA+BT,EAAgB/D,EACnEC,IAAI,SAAC3B,EAAMC,GAAP,OACHiG,IAAiBjG,EACbD,EACA,CACAQ,KAAMR,EAAKQ,KACXG,KAAMX,EAAKW,KACXN,SAAUL,EAAKK,SACfE,YAAaA,UAcjB3C,EAAAC,EAAAC,cAACqI,EAAD,CAAOxI,QAAU,CAACkH,QAzBN,SAAC7E,GAAD,OAAUyF,EAAe,GAAA3E,OAAAtF,OAAA4K,EAAA,EAAA5K,CAAKkG,GAAL,CAAY1B,WDVvC,MAASqG,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.74ee75cf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, actions } = props;\n\n  const inputSearchStr = (e) => actions.changeSearchStr(e.target.value);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            Wantedly React ToDo\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              onChange={inputSearchStr}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SearchAppBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nfunction ContainedButtons(props) {\n  const { classes, actions } = props;\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        className={classes.button}\n        onClick={() => actions.changeFilter(null)}\n      >\n        All\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        onClick={() => actions.changeFilter(false)}\n      >\n        In Progress\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button}\n        onClick={() => actions.changeFilter(true)}\n      >\n        Finished\n      </Button>\n    </div>\n  );\n}\n\nContainedButtons.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ContainedButtons);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DateFormat from 'dateformat';\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    display: 'flex',\n    'justify-content': 'space-between',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  over: {\n    color: \"#ff4949\"\n  }\n};\n\nfunction SimpleCard(props) {\n  const { classes, actions, state, todo, index } = props;\n  const is_over = (new Date()).getTime() - todo.deadline > 0;\n\n  const deleteTodo = () => actions.removeTodo(index);\n  const checkFinish = (e) => actions.changeFinished(e.target.checked, index);\n\n  if(state.filter !== null && state.filter !== todo.is_finished) return null;\n  if(todo.name.match(state.search_str) === null && todo.desc.match(state.search_str) === null) return null;\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={`${classes.title} ${is_over ? classes.over : \"\"}`} color=\"textSecondary\" gutterBottom>\n          { DateFormat(todo.deadline, \"fullDate\") }\n        </Typography>\n        <Typography variant=\"h6\" component=\"h2\">\n          { todo.name }\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          { todo.is_finished ? 'Finished' : 'In Progress' }\n        </Typography>\n        <Typography component=\"p\">\n          { todo.desc }\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Checkbox\n          color=\"primary\"\n          onClick={checkFinish}\n          checked={todo.is_finished}\n        />\n        <IconButton\n          aria-label=\"Delete\"\n          onClick={deleteTodo}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n\nSimpleCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleCard);\n","import React from 'react';\n\nimport Card from './Card.js';\n\nexport default (props) => {\n  const { actions, state } = props;\n\n  const cardDoms = state.todos.map(\n    (todo, index) =>\n      (<Card key={index} actions={actions} state={state} todo={todo} index={index} />));\n\n  return (\n    <div className=\"cards\">\n      {cardDoms}\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst modalStyle = {\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n};\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n  fab: {\n    margin: theme.spacing.unit,\n    position: 'fixed',\n    bottom: '0',\n    right: '0',\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  button: {\n    display: 'block',\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction SimpleModal(props) {\n  const { classes, actions } = props;\n\n  const [open, openDispatcher] = React.useState(false);\n  const [name, nameDispatcher] = React.useState(\"\");\n  const [desc, descDispatcher] = React.useState(\"\");\n  const [deadline, deadlineDispatcher] = React.useState((new Date()).getTime());\n\n  const changeValues = (dispatcher, value) => dispatcher(value);\n\n  const addTask = () => {\n    actions.addTodo({\n      name,\n      desc,\n      deadline: (new Date(deadline)).getTime(),\n      is_finished: false,\n    });\n    openDispatcher(false);\n  };\n\n  return (\n    <div>\n      <Fab onClick={() => openDispatcher(true)} color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n        <AddIcon />\n      </Fab>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={() => openDispatcher(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n            <TextField\n              id=\"name\"\n              label=\"name\"\n              type=\"text\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => changeValues(nameDispatcher, e.target.value)}\n            />\n            <TextField\n              id=\"desc\"\n              label=\"Description\"\n              type=\"text\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => changeValues(descDispatcher, e.target.value)}\n            />\n            <TextField\n              id=\"deadline\"\n              label=\"DeadLine\"\n              type=\"date\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => changeValues(deadlineDispatcher, e.target.value)}\n            />\n            <Button\n              className={classes.button}\n              onClick={ () => addTask(\"hoge\") }\n            >\n            Submit\n            </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nSimpleModal.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst SimpleModalWrapped = withStyles(styles)(SimpleModal);\n\nexport default SimpleModalWrapped;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport Header from './components/Header.js';\nimport FilterButtons from './components/FilterButtons.js';\nimport Cards from './components/Cards.js';\nimport Modal from './components/Modal.js';\n\nexport default () => {\n  const initState = localStorage.getItem('wanted_react_todo');\n\n  // state and dispatcher\n  const [todos, todosDispatcher] = React.useState(initState === null ? [] : JSON.parse(initState));\n  const [filter, filterDispatcher] = React.useState(null);\n  const [search_str, searchStrDispatcher] = React.useState(\"\");\n\n  // component actions\n  const addTodo = (todo) => todosDispatcher([...todos, todo]);\n  const removeTodo = (target_index) => todosDispatcher(todos\n    .filter((todo, index) => target_index !== index));\n  const changeFinished = (is_finished, target_index) => todosDispatcher(todos\n    .map((todo, index) =>\n      target_index !== index\n        ? todo\n        : {\n          name: todo.name,\n          desc: todo.desc,\n          deadline: todo.deadline,\n          is_finished: is_finished,\n        }));\n  const changeFilter = (value) => filterDispatcher(value);\n  const changeSearchStr = (str) => searchStrDispatcher(str);\n\n  React.useEffect(() => {\n    localStorage.setItem('wanted_react_todo', JSON.stringify(todos))\n  }, [todos]);\n\n  return (\n    <div className=\"app\">\n      <Header actions={ {changeSearchStr} } />\n      <FilterButtons actions={ {changeFilter} } />\n      <Cards state={ {todos, filter, search_str} } actions={ {removeTodo, changeFinished} } />\n      <Modal actions={ {addTodo} } />\n    </div>\n  );\n};\n"],"sourceRoot":""}